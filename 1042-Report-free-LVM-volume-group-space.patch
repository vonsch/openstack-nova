From 3c8634ae5f171603c72b8daf9cb9b99f1df66a9a Mon Sep 17 00:00:00 2001
From: Jaroslav Pulchart <jaroslav.pulchart@gooddata.com>
Date: Mon, 8 Jul 2013 09:02:08 +0200
Subject: [PATCH] FEATURE: PCI-1523 Report free LVM volume group space instead
 of filesystem space when LVM AMI is used.

---
 nova/virt/libvirt/driver.py | 16 ++++++++++++----
 nova/virt/libvirt/utils.py  | 10 ++++++++++
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/nova/virt/libvirt/driver.py b/nova/virt/libvirt/driver.py
index dc65047..619ddd7 100644
--- a/nova/virt/libvirt/driver.py
+++ b/nova/virt/libvirt/driver.py
@@ -2055,8 +2055,12 @@ class LibvirtDriver(driver.ComputeDriver):
 
         """
 
-        stats = libvirt_utils.get_fs_info(FLAGS.instances_path)
-        return stats['total'] / (1024 ** 3)
+        if FLAGS.libvirt_images_type != "lvm":
+            stats = libvirt_utils.get_fs_info(FLAGS.instances_path)
+            return stats['total'] / (1024 ** 3)
+        else:
+            out = libvirt_utils.volume_group_total_space(FLAGS.libvirt_images_volume_group)
+            return int(out / 1024 ** 3)
 
     def get_vcpu_used(self):
         """ Get vcpu usage number of physical computer.
@@ -2124,8 +2128,12 @@ class LibvirtDriver(driver.ComputeDriver):
 
         """
 
-        stats = libvirt_utils.get_fs_info(FLAGS.instances_path)
-        return stats['used'] / (1024 ** 3)
+        if FLAGS.libvirt_images_type != "lvm":
+            stats = libvirt_utils.get_fs_info(FLAGS.instances_path)
+            return stats['used'] / (1024 ** 3)
+        else:
+            out = libvirt_utils.volume_group_total_space(FLAGS.libvirt_images_volume_group) - libvirt_utils.volume_group_free_space(FLAGS.libvirt_images_volume_group)
+            return int(out / 1024 ** 3)
 
     def get_hypervisor_type(self):
         """Get hypervisor type.
diff --git a/nova/virt/libvirt/utils.py b/nova/virt/libvirt/utils.py
index 82dc956..34a1288 100644
--- a/nova/virt/libvirt/utils.py
+++ b/nova/virt/libvirt/utils.py
@@ -137,6 +137,16 @@ def volume_group_free_space(vg):
                        run_as_root=True)
     return int(out.strip())
 
+def volume_group_total_space(vg):
+    """Return total space on volume group in bytes.
+
+    :param vg: volume group name
+    """
+    out, err = execute('vgs', '--noheadings', '--nosuffix',
+                       '--units', 'b', '-o', 'vg_size', vg,
+                       run_as_root=True)
+    return int(out.strip())
+
 
 def list_logical_volumes(vg):
     """List logical volumes paths for given volume group.
-- 
1.8.3.1

