From 4ade2ad67a3862aa1e6d59e05fad6806baea7a62 Mon Sep 17 00:00:00 2001
From: TianTian Gao <gtt116@126.com>
Date: Wed, 17 Oct 2012 10:03:24 +0800
Subject: [PATCH] update kwargs with args in wrap_instance_fault

fix bug: 1067254

If argument 'instance' is in args rather than kwargs,
we will get a KeyError exception which will cover up
the real exception. So, we update kwargs with the
values from args first. then, we can get 'instance'
from kwargs easily.

Change-Id: Ife89f9e9629e4b581d96289434e9ececced17915
---
 nova/compute/manager.py            |  6 ++++++
 nova/tests/compute/test_compute.py | 20 ++++++++++++++++++++
 2 files changed, 26 insertions(+)

diff --git a/nova/compute/manager.py b/nova/compute/manager.py
index 6088cbf..9bf06e1 100644
--- a/nova/compute/manager.py
+++ b/nova/compute/manager.py
@@ -194,6 +194,12 @@ def wrap_instance_fault(function):
         except exception.InstanceNotFound:
             raise
         except Exception, e:
+            # NOTE(gtt): If argument 'instance' is in args rather than kwargs,
+            # we will get a KeyError exception which will cover up the real
+            # exception. So, we update kwargs with the values from args first.
+            # then, we can get 'instance' from kwargs easily.
+            kwargs.update(dict(zip(function.func_code.co_varnames[2:], args)))
+
             with excutils.save_and_reraise_exception():
                 compute_utils.add_instance_fault_from_exc(context,
                         kwargs['instance']['uuid'], e, sys.exc_info())
diff --git a/nova/tests/compute/test_compute.py b/nova/tests/compute/test_compute.py
index 6fc3177..c340199 100644
--- a/nova/tests/compute/test_compute.py
+++ b/nova/tests/compute/test_compute.py
@@ -227,6 +227,26 @@ class ComputeTestCase(BaseTestCase):
 
         self.assertTrue(called['fault_added'])
 
+    def test_wrap_instance_fault_instance_in_args(self):
+        inst = {"uuid": "fake_uuid"}
+
+        called = {'fault_added': False}
+
+        def did_it_add_fault(*args):
+            called['fault_added'] = True
+
+        self.stubs.Set(compute_utils, 'add_instance_fault_from_exc',
+                       did_it_add_fault)
+
+        @compute_manager.wrap_instance_fault
+        def failer(self2, context, instance):
+            raise NotImplementedError()
+
+        self.assertRaises(NotImplementedError, failer,
+                          self.compute, self.context, inst)
+
+        self.assertTrue(called['fault_added'])
+
     def test_wrap_instance_fault_no_instance(self):
         inst_uuid = "fake_uuid"
 
-- 
1.8.1.4

