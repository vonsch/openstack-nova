diff --git a/nova/virt/libvirt/config.py b/nova/virt/libvirt/config.py
index 4e5341e..a8518a5 100644
--- a/nova/virt/libvirt/config.py
+++ b/nova/virt/libvirt/config.py
@@ -584,6 +584,7 @@ class LibvirtConfigGuest(LibvirtConfigObject):
         self.memory = 1024 * 1024 * 500
         self.vcpus = 1
         self.cpu = None
+        self.hugepages = False
         self.acpi = False
         self.apic = False
         self.pae = False
@@ -623,6 +624,12 @@ class LibvirtConfigGuest(LibvirtConfigObject):
             os.append(etree.Element("boot", dev=self.os_boot_dev))
         root.append(os)
 
+    def _format_memorybacking(self, root):
+        if self.hugepages:
+            memorybacking = etree.Element("memoryBacking")
+            memorybacking.append(etree.Element("hugepages"))
+            root.append(memorybacking)
+
     def _format_features(self, root):
         if self.acpi or self.apic or self.pae:
             features = etree.Element("features")
@@ -649,6 +656,7 @@ class LibvirtConfigGuest(LibvirtConfigObject):
 
         self._format_basic_props(root)
         self._format_os(root)
+        self._format_memorybacking(root)
         self._format_features(root)
 
         if self.clock is not None:
diff --git a/nova/virt/libvirt/driver.py b/nova/virt/libvirt/driver.py
index 954eb18..623a143 100644
--- a/nova/virt/libvirt/driver.py
+++ b/nova/virt/libvirt/driver.py
@@ -100,6 +100,9 @@ libvirt_opts = [
                default='kvm',
                help='Libvirt domain type (valid options are: '
                     'kvm, lxc, qemu, uml, xen)'),
+    cfg.BoolOpt('libvirt_hugepages',
+               default=False,
+               help='Libvirt hugepages memory backed'),
     cfg.StrOpt('libvirt_uri',
                default='',
                help='Override the default libvirt URI '
@@ -1830,6 +1833,9 @@ class LibvirtDriver(driver.ComputeDriver):
             if instance['architecture'] == "i686":
                 guest.pae = True
 
+        if FLAGS.libvirt_hugepages == True:
+            guest.hugepages = True
+
         clk = config.LibvirtConfigGuestClock()
         clk.offset = "utc"
         guest.set_clock(clk)
