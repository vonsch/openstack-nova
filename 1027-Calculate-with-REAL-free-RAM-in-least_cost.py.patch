diff --git a/nova/scheduler/host_manager.py b/nova/scheduler/host_manager.py
index e406731..c110de1 100644
--- a/nova/scheduler/host_manager.py
+++ b/nova/scheduler/host_manager.py
@@ -116,6 +116,7 @@ class HostState(object):
         if capabilities is None:
             capabilities = {}
         self.capabilities = ReadOnlyDict(capabilities.get(topic, None))
+        self.memory_free = self.capabilities.get('host_memory_free', None)
         if service is None:
             service = {}
         self.service = ReadOnlyDict(service)
@@ -180,9 +181,8 @@ class HostState(object):
         return True
 
     def __repr__(self):
-        return ("host '%s': free_ram_mb:%s free_disk_mb:%s" %
-                (self.host, self.free_ram_mb, self.free_disk_mb))
-
+        return ("host '%s': free_ram_mb:%s free_disk_mb:%s memory_free:%s" %
+                (self.host, self.free_ram_mb, self.free_disk_mb, self.memory_free))
 
 class HostManager(object):
     """Base HostManager class."""
diff --git a/nova/scheduler/least_cost.py b/nova/scheduler/least_cost.py
index bccdd0a..61cc822 100644
--- a/nova/scheduler/least_cost.py
+++ b/nova/scheduler/least_cost.py
@@ -86,7 +86,16 @@ def compute_fill_first_cost_fn(host_state, weighing_properties):
     is -1.0. With a -1.0 this function runs in reverse, so systems
     with the most free memory will be preferred.
     """
-    return host_state.free_ram_mb
+    try:
+        if host_state.memory_free is not None:
+            LOG.debug(_("host_state.memory_free=%s") % host_state.memory_free)
+            return host_state.memory_free
+        else:
+            LOG.debug(_("host_state.free_ram_mb=%s") % host_state.free_ram_mb)
+            return host_state.free_ram_mb
+    except:
+        LOG.debug(_("host_state.free_ram_mb=%s") % host_state.free_ram_mb)
+        return host_state.free_ram_mb
 
 
 def weighted_sum(weighted_fns, host_states, weighing_properties):
